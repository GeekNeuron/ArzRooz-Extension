
# PowerShell Combiner Script (Version 3 - Final with Auto-Formatting)
# Combines HTML/CSS/JS and optionally formats the output with Prettier.

param (
    [Parameter(Mandatory=$true, Position=0)]
    [string]$InputFile
)

# Check if the input file exists
if (-not (Test-Path $InputFile)) {
    Write-Error "Error: Input file not found at '$InputFile'"
    pause
    exit
}

Write-Host "Processing file: $(Split-Path $InputFile -Leaf)" -ForegroundColor Green
Write-Host "================================================"

# --- Part 1: Separate content ---
Write-Host "Step 1: Separating content..."
$htmlContent = New-Object System.Text.StringBuilder
$cssContent  = New-Object System.Text.StringBuilder
$jsContent   = New-Object System.Text.StringBuilder
$writingMode = "html"

Get-Content $InputFile | ForEach-Object {
    $line = $_
    if ($line -match "<style") { $writingMode = "css"; return }
    if ($line -match "</style>") { $writingMode = "html"; return }
    if ($line -match "<script") { $writingMode = "js"; return }
    if ($line -match "</script>") { $writingMode = "html"; return }
    switch ($writingMode) {
        "html" { [void]$htmlContent.AppendLine($line) }
        "css"  { [void]$cssContent.AppendLine($line) }
        "js"   { [void]$jsContent.AppendLine($line) }
    }
}

# --- Part 2: Rebuild the file ---
Write-Host "Step 2: Building the final HTML file..."
$outputFile = Join-Path (Split-Path $InputFile) "output.html"
$finalHtml = @"
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Combined Output</title>
  <style>
$($cssContent.ToString())
  </style>
</head>
<body>
$($htmlContent.ToString())
  <script defer>
$($jsContent.ToString())
  </script>
</body>
</html>
"@
$finalHtml | Set-Content -Path $outputFile -Encoding UTF8
Write-Host "File built successfully: $outputFile" -ForegroundColor Cyan

# --- Part 3 (Optional): Format with Prettier ---
Write-Host "Step 3: Checking for Prettier code formatter..."
$prettier = Get-Command prettier -ErrorAction SilentlyContinue
if ($prettier) {
    Write-Host "Prettier found! Formatting the output file..." -ForegroundColor Yellow
    prettier --write $outputFile
    Write-Host "Formatting complete." -ForegroundColor Yellow
}
else {
    Write-Host "NOTE: Prettier is not installed. The output file is not formatted."
    Write-Host "To enable auto-formatting, install Node.js and then run this command:"
    Write-Host "  npm install --global prettier"
}

Write-Host "================================================"
Write-Host "Operation finished. Press any key to exit..." -ForegroundColor Green
pause
